academic_planner_frontend/
├── public/                             # Archivos estáticos
│   ├── index.html
│   └── ... (favicons, etc.)
├── src/
│   ├── api/                            # Clientes para interactuar con el backend
│   │   ├── __tests__/
│   │   ├── authApi.js
│   │   ├── dataMastersApi.js
│   │   ├── planningApi.js
│   │   └── reportsApi.js
│   ├── assets/                         # Imágenes, fuentes, etc.
│   │   └── ...
│   ├── components/                     # Componentes UI reutilizables
│   │   ├── __tests__/
│   │   ├── auth/                       # Componentes de autenticación
│   │   │   ├── LoginForm.jsx
│   │   │   └── ...
│   │   ├── common/                     # Componentes genéricos (botones, modales, tablas)
│   │   │   ├── Button.jsx
│   │   │   ├── Modal.jsx
│   │   │   ├── Table.jsx
│   │   │   └── FileUploader.jsx
│   │   ├── data_masters/               # Componentes para gestión de datos maestros
│   │   │   └── DataUploadSection.jsx
│   │   ├── planning/                   # Componentes para la planificación
│   │   │   ├── CalendarView.jsx
│   │   │   ├── EventModal.jsx
│   │   │   └── TeacherAssignment.jsx
│   │   └── reports/
│   │       └── ReportDownloadButton.jsx
│   ├── contexts/                       # React Context API (o store si se usa Redux/Zustand)
│   │   ├── __tests__/
│   │   ├── AuthContext.jsx
│   │   └── PlanningContext.jsx
│   ├── hooks/                          # Hooks personalizados
│   │   ├── __tests__/
│   │   └── useAuth.js
│   ├── layouts/                        # Componentes de layout (ej. MainLayout con sidebar)
│   │   ├── __tests__/
│   │   └── MainLayout.jsx
│   ├── pages/                          # Componentes de página (vistas principales)
│   │   ├── __tests__/
│   │   ├── LoginPage.jsx
│   │   ├── DashboardPage.jsx           # Podría ser la página de planificación
│   │   ├── DataManagementPage.jsx
│   │   └── NotFoundPage.jsx
│   ├── routes/                         # Configuración de rutas
│   │   ├── __tests__/
│   │   ├── index.js
│   │   └── ProtectedRoute.jsx
│   ├── services/                       # Servicios no relacionados con API (ej. localStorage)
│   │   ├── __tests__/
│   │   └── tokenService.js
│   ├── styles/                         # Estilos globales, temas
│   │   ├── global.css
│   │   └── theme.js
│   ├── utils/                          # Funciones de utilidad
│   │   ├── __tests__/
│   │   └── helpers.js
│   ├── App.jsx                         # Componente raíz de la aplicación
│   ├── index.jsx                       # Punto de entrada
│   └── setupTests.js                   # Configuración de pruebas
├── .env
├── .env.example
├── .gitignore
├── Dockerfile                          # (Opcional, si se containeriza el frontend)
├── docker-compose.yml                  # (Opcional)
├── package.json
└── (vite.config.js o craco.config.js, etc.)